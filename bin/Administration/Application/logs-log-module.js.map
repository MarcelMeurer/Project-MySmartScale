{"version":3,"sources":["webpack:///./node_modules/@nebular/moment/index.js","webpack:///./node_modules/@nebular/moment/moment.module.js","webpack:///./node_modules/@nebular/moment/services/moment-date.service.js","webpack:///./src/app/@core/data-services/log-table.service.ts","webpack:///./src/app/pages/logs/log-routing.module.ts","webpack:///./src/app/pages/logs/log-table/log-table.component.html","webpack:///./src/app/pages/logs/log-table/log-table.component.ts","webpack:///./src/app/pages/logs/log.component.ts","webpack:///./src/app/pages/logs/log.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC+C;AACf;AAChC,iC;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACyC;AACM;AACsB;AACrE;AACA;AACA;AACA;AACA,QAAQ,8DAAQ;AAChB,yBAAyB,UAAU,4DAAa,YAAY,iFAAmB,EAAE;AACjF,SAAS;AACT;AACA;AACA,CAAC;AAC6B;AAC9B,yC;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,eAAe,SAAI,IAAI,SAAI;AAC3B,mCAAmC,oCAAoC;AACvE;AAC8D;AACX;AACJ;AACb;AAClC;AACkD;AAClD,aAAa,6CAAa,IAAI,mCAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS,gEAAgB,QAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS,gEAAgB,aAAa;AACrE;AACA;AACA;AA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","file":"logs-log-module.js","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nexport * from './services/moment-date.service';\nexport * from './moment.module';\n//# sourceMappingURL=index.js.map","/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core';\nimport { NbDateService } from '@nebular/theme';\nimport { NbMomentDateService } from './services/moment-date.service';\nvar NbMomentDateModule = /** @class */ (function () {\n    function NbMomentDateModule() {\n    }\n    NbMomentDateModule = __decorate([\n        NgModule({\n            providers: [{ provide: NbDateService, useClass: NbMomentDateService }],\n        })\n    ], NbMomentDateModule);\n    return NbMomentDateModule;\n}());\nexport { NbMomentDateModule };\n//# sourceMappingURL=moment.module.js.map","/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { TranslationWidth } from '@angular/common';\nimport { NbDateService } from '@nebular/theme';\nimport * as _moment from 'moment';\n// @ts-ignore\nimport { default as _rollupMoment } from 'moment';\nvar moment = _rollupMoment || _moment;\nvar NbMomentDateService = /** @class */ (function (_super) {\n    __extends(NbMomentDateService, _super);\n    function NbMomentDateService(locale) {\n        var _this = _super.call(this) || this;\n        _this.setLocale(locale);\n        return _this;\n    }\n    NbMomentDateService.prototype.setLocale = function (locale) {\n        _super.prototype.setLocale.call(this, locale);\n        this.setMomentLocaleData(locale);\n    };\n    NbMomentDateService.prototype.addDay = function (date, days) {\n        return this.clone(date).add({ days: days });\n    };\n    NbMomentDateService.prototype.addMonth = function (date, months) {\n        return this.clone(date).add({ months: months });\n    };\n    NbMomentDateService.prototype.addYear = function (date, years) {\n        return this.clone(date).add({ years: years });\n    };\n    NbMomentDateService.prototype.clone = function (date) {\n        return date.clone().locale(this.locale);\n    };\n    NbMomentDateService.prototype.compareDates = function (date1, date2) {\n        return this.getYear(date1) - this.getYear(date2) ||\n            this.getMonth(date1) - this.getMonth(date2) ||\n            this.getDate(date1) - this.getDate(date2);\n    };\n    NbMomentDateService.prototype.createDate = function (year, month, date) {\n        return moment([year, month, date]);\n    };\n    NbMomentDateService.prototype.format = function (date, format) {\n        if (date) {\n            return date.format(format || this.localeData.defaultFormat);\n        }\n        return '';\n    };\n    NbMomentDateService.prototype.getDate = function (date) {\n        return this.clone(date).date();\n    };\n    NbMomentDateService.prototype.getDayOfWeek = function (date) {\n        return this.clone(date).day();\n    };\n    NbMomentDateService.prototype.getDayOfWeekNames = function (style) {\n        if (style === void 0) { style = TranslationWidth.Narrow; }\n        return this.localeData.days[style];\n    };\n    NbMomentDateService.prototype.getFirstDayOfWeek = function () {\n        return this.localeData.firstDayOfWeek;\n    };\n    NbMomentDateService.prototype.getMonth = function (date) {\n        return this.clone(date).month();\n    };\n    NbMomentDateService.prototype.getMonthEnd = function (date) {\n        return this.clone(date).endOf('month');\n    };\n    NbMomentDateService.prototype.getMonthName = function (date, style) {\n        if (style === void 0) { style = TranslationWidth.Abbreviated; }\n        var month = this.getMonth(date);\n        return this.getMonthNameByIndex(month, style);\n    };\n    NbMomentDateService.prototype.getMonthNameByIndex = function (month, style) {\n        if (style === void 0) { style = TranslationWidth.Abbreviated; }\n        return this.localeData.months[style][month];\n    };\n    NbMomentDateService.prototype.getMonthStart = function (date) {\n        return this.clone(date).startOf('month');\n    };\n    NbMomentDateService.prototype.getNumberOfDaysInMonth = function (date) {\n        return this.clone(date).daysInMonth();\n    };\n    NbMomentDateService.prototype.getYear = function (date) {\n        return this.clone(date).year();\n    };\n    NbMomentDateService.prototype.getYearEnd = function (date) {\n        return this.clone(date).endOf('year');\n    };\n    NbMomentDateService.prototype.getYearStart = function (date) {\n        return this.clone(date).startOf('year');\n    };\n    NbMomentDateService.prototype.isSameDay = function (date1, date2) {\n        return this.isSameMonth(date1, date2) && this.getDate(date1) === this.getDate(date2);\n    };\n    NbMomentDateService.prototype.isSameMonth = function (date1, date2) {\n        return this.isSameYear(date1, date2) && this.getMonth(date1) === this.getMonth(date2);\n    };\n    NbMomentDateService.prototype.isSameYear = function (date1, date2) {\n        return this.getYear(date1) === this.getYear(date2);\n    };\n    NbMomentDateService.prototype.isValidDateString = function (date, format) {\n        return moment(date, format).isValid();\n    };\n    NbMomentDateService.prototype.parse = function (date, format) {\n        return moment(date, format);\n    };\n    NbMomentDateService.prototype.today = function () {\n        return moment();\n    };\n    NbMomentDateService.prototype.getId = function () {\n        return 'moment';\n    };\n    NbMomentDateService.prototype.setMomentLocaleData = function (locale) {\n        var _a, _b;\n        var momentLocaleData = moment.localeData(locale);\n        this.localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            defaultFormat: momentLocaleData.longDateFormat('L'),\n            months: (_a = {},\n                _a[TranslationWidth.Abbreviated] = momentLocaleData.monthsShort(),\n                _a[TranslationWidth.Wide] = momentLocaleData.months(),\n                _a),\n            days: (_b = {},\n                _b[TranslationWidth.Wide] = momentLocaleData.weekdays(),\n                _b[TranslationWidth.Short] = momentLocaleData.weekdaysShort(),\n                _b[TranslationWidth.Narrow] = momentLocaleData.weekdaysMin(),\n                _b),\n        };\n    };\n    NbMomentDateService = __decorate([\n        Injectable(),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], NbMomentDateService);\n    return NbMomentDateService;\n}(NbDateService));\nexport { NbMomentDateService };\n//# sourceMappingURL=moment-date.service.js.map","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { timeout } from 'rxjs/operators';\r\nimport { updateBinding } from '@angular/core/src/render3/instructions';\r\nimport { promise } from 'selenium-webdriver';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport  class LogTableDataService   {\r\n  constructor(private http: HttpClient){\r\n    console.log(\"Constructor of: LogTableDataService\");\r\n  }\r\n  getData(from:number,to:number):Observable<any[]>{\r\n    return this.http.get<any[]>(\"/Data/Logfiles/\"+from.toString()+\"/\"+to.toString());\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TablesComponent } from './log.component';\r\nimport { LogTableComponent } from './log-table/log-table.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: TablesComponent,\r\n  children: [{\r\n    path: 'log-table',\r\n    component: LogTableComponent,\r\n  }],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TablesRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  TablesComponent,\r\n  LogTableComponent,\r\n];\r\n","module.exports = \"<nb-card>\\r\\n  <nb-card-header>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-7\\\">Logging</div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n            <input nbInput placeholder=\\\"{{inputDateField}}\\\"   [nbDatepicker]=\\\"rangepicker\\\" >\\r\\n            <nb-rangepicker #rangepicker  (rangeChange)=\\\"onDateChange($event)\\\" [(range)]=\\\"range\\\" format=\\\"yyyy.MM.dd\\\"></nb-rangepicker>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-1\\\"><button nbButton size=\\\"xsmall\\\" (click)=\\\"onReLoadData()\\\"><i class=\\\"fa\\\"  aria-hidden=\\\"true\\\">&#xf021;</i></button></div>\\r\\n      </div>\\r\\n  </nb-card-header>\\r\\n\\r\\n  <nb-card-body>\\r\\n    <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\">\\r\\n    </ng2-smart-table>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { LogTableDataService }from '../../../@core/data-services/log-table.service'\r\nimport { FormControl } from '@angular/forms';\r\nimport { NbCalendarRange, NbDateService } from '@nebular/theme';\r\n\r\n\r\nimport { Logs } from 'selenium-webdriver';\r\nimport { maybeQueueResolutionOfComponentResources } from '@angular/core/src/metadata/resource_loading';\r\nimport * as moment from 'moment';\r\nimport { WeekDay } from '@angular/common';\r\nimport { Globals } from '../../../global';\r\n\r\n@Component({\r\n  selector: 'ngx-smart-table',\r\n  templateUrl: './log-table.component.html',\r\n  styles: [`\r\n    nb-card {\r\n      transform: translate3d(0, 0, 0);\r\n    }\r\n  `],\r\n  providers: [LogTableDataService]\r\n})\r\nexport class LogTableComponent {\r\n\r\n  settings = {\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    actions: {\r\n      add:false,\r\n      edit:false,\r\n      delete:false,\r\n    },\r\n    pager: {\r\n      perPage: 50,\r\n    },\r\n    columns: {\r\n      TimeUtc: {\r\n        title: 'Time Utc'\r\n      },\r\n      Tenant: {\r\n        title: 'Tenant',\r\n        type: 'strstringing',\r\n      },\r\n      Severity: {\r\n        title: 'Severity',\r\n        type: 'string',\r\n        filter: \"select\",\r\n      },      ParentMethod: {\r\n        title: 'ParentMethod',\r\n        type: 'string',\r\n      },\r\n      Message: {\r\n        title: 'Message',\r\n        type: 'string',\r\n      },\r\n    },\r\n  };\r\n  \r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: LogTableDataService,protected dateService: NbDateService<Date>,private globals: Globals) {\r\n    console.log(\"constructor has called \");\r\n    let start=this.globals.DateToUtcMoment(new Date());\r\n    let end=start.clone();\r\n    this.range = {      \r\n      start: start.add(-this.globals.LogsDaysLookBack,\"days\").toDate(),\r\n      end:  end.add(1,\"days\").toDate()\r\n    };\r\n    this.inputDateField=this.globals.LogsDaysLookBack.toString()+\" days back\";\r\n    this.onReLoadData();\r\n  }\r\n  range: NbCalendarRange<Date>;\r\n  inputDateField: string;\r\n\r\n  onReLoadData(): void{\r\n    console.log(\"Load log data\");\r\n    let from=this.globals.DateToUtcMoment(this.range.start);\r\n    let to=this.globals.DateToUtcMoment(this.range.end);\r\n    this.service.getData(moment.utc(from).unix(),moment.utc(to).add(1,\"days\").unix()).subscribe((data) => {\r\n      this.source.load(data);\r\n    });\r\n  }\r\n  onDateChange(event):void{\r\n    if(event.end!=null && event.start!=null) {\r\n      this.range = {\r\n        start: event.start,\r\n        end: event.end\r\n      }\r\n      this.onReLoadData();\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-tables',\r\n  template: `\r\n  <router-outlet></router-outlet>`,\r\n})\r\nexport class TablesComponent {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { TablesRoutingModule, routedComponents } from './log-routing.module';\r\nimport { NbMomentDateModule } from '@nebular/moment';\r\n\r\nimport { NbDateService } from '@nebular/theme';\r\n\r\n@NgModule({\r\n  imports: [\r\n    ThemeModule,\r\n    TablesRoutingModule,\r\n    Ng2SmartTableModule,\r\n    NbMomentDateModule\r\n  ],\r\n  declarations: [\r\n    ...routedComponents,\r\n  ],\r\n})\r\nexport class LogModule { }\r\n"],"sourceRoot":""}